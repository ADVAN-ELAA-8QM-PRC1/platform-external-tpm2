********************
TPM2 CODE GENERATION
********************

Code generation scripts for libtpm2 were taken from src/platform2/trunks and
modified to generate code appropriate for libtpm2.

====================
 TPM SPECIFICATION
====================

See http://www.trustedcomputinggroup.org.  This version of libtpm2 is based on
TPM 2.0 rev 00.99.

--- Structures ---
raw_structures.txt
raw_structures_fixed.txt

This file is a direct PDF scrape* of 'Part 2 - Structures'.  The '_fixed'
version includes some manual fixes to make processing easier.

--- Commands ---
raw_commands.txt
raw_commands_fixed.txt

This file is a direct PDF scrape* of 'Part 3 - Commands'.  The '_fixed' version
includes some manual fixes to make processing easier.

---
*Scraping for this version of trunks used Poppler's pdftotext utility v0.18.4.

====================
      SCRIPTS
====================

-------- extract_structures.sh ---------

Extracts structured information about typedefs, constants types, attribute
structures, interface types, structures, and unions from
raw_structures_fixed.txt. The output of this script (structures.txt) is intended
to be parsed by structure_generator.py.

--------- extract_commands.sh ----------

Extracts structured information about commands from from raw_commands_fixed.txt.
The output of this script (commands.txt) is intended to be parsed by
command_generator.py.

-------- structure_generator.py --------

Generates C marshaling and unmarshaling code for TPM structures. Value
validation code as defined in 'Part 2 - Structures' is generated alongside
unmarshaling code. Input must be formatted as by the extract_structures.sh
script.

output files: tpm_generated.{c,h}

--------- command_generator.py ---------

Generates C code to marshal TPM command responses, unmarshal TPM requests, parse
the handle buffer, and dispatch and execute a command. Input must be formatted
as by the extract_commands.sh script.

output files: Marshal_$COMMAND.c, $COMMAND_fp.h, CommandDispatcher.c,
              HandleProcess.c, GetCommandCodeString.{c,h}
